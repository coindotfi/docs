{
  "openapi": "3.0.1",
  "info": {
    "title": "CoinFi Blockchain API",
    "description": "A production-ready Cosmos-based blockchain API for CoinFi. This API provides endpoints to access key blockchain data, submit transactions, query network status, and more. The API is designed to be both human-friendly and machine-consumable, with detailed examples for each endpoint.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.coinfi.zone"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/transactions": {
      "get": {
        "description": "Returns a list of transactions from the CoinFi blockchain. Example: GET https://api.coinfi.zone/transactions?limit=10 retrieves the latest 10 transactions.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of transactions to return. Default is 10 if not specified.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "A list of transactions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                },
                "examples": {
                  "transactions": {
                    "value": {
                      "transactions": [
                        {
                          "from": "addr1",
                          "to": "addr2",
                          "amount": "100",
                          "txHash": "abc123"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Submits a new transaction to the CoinFi blockchain. Example: POST a JSON payload with transaction details.",
        "requestBody": {
          "description": "Transaction details to be submitted.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTransaction"
              },
              "examples": {
                "newTransaction": {
                  "value": {
                    "from": "sender_address",
                    "to": "receiver_address",
                    "amount": "50",
                    "nonce": 123456,
                    "signature": "signature_string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transaction response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error, such as invalid data format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{id}": {
      "delete": {
        "description": "Cancels a pending transaction based on the ID supplied. Example: DELETE https://api.coinfi.zone/transactions/12345.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the transaction to cancel.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 12345
          }
        ],
        "responses": {
          "204": {
            "description": "Transaction cancelled successfully.",
            "content": {}
          },
          "400": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Transaction": {
        "required": [
          "from",
          "to",
          "amount"
        ],
        "type": "object",
        "properties": {
          "from": {
            "description": "Sender address",
            "type": "string"
          },
          "to": {
            "description": "Receiver address",
            "type": "string"
          },
          "amount": {
            "description": "Transaction amount",
            "type": "string"
          },
          "txHash": {
            "description": "Transaction hash",
            "type": "string"
          }
        }
      },
      "NewTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Transaction"
          },
          {
            "required": [
              "nonce",
              "signature"
            ],
            "type": "object",
            "properties": {
              "nonce": {
                "description": "Transaction nonce",
                "type": "integer",
                "format": "int64"
              },
              "signature": {
                "description": "Digital signature of the transaction",
                "type": "string"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}